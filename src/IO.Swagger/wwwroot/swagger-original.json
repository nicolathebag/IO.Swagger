{
  "openapi" : "3.0.3",
  "info" : {
    "title" : "Swagger ItaliaTreni - OpenAPI 3.0",
    "description" : "This is a sample Pet Store Server based on the OpenAPI 3.0 specification.  You can find out more about\nSwagger at [https://swagger.io](https://swagger.io). In the third iteration of the pet store, we've switched to the design first approach!\nYou can now help us improve the API whether it's by making changes to the definition itself or to the code.\nThat way, with time, we can improve the API in general, and expose some of the new features in OAS3.\n\n_If you're looking for the Swagger 2.0/OAS 2.0 version of Petstore, then click [here](https://editor.swagger.io/?url=https://petstore.swagger.io/v2/swagger.yaml). Alternatively, you can load via the `Edit > Load Petstore OAS 2.0` menu option!_\n\nSome useful links:\n- [The Pet Store repository](https://github.com/swagger-api/swagger-petstore)\n- [The source API definition for the Pet Store](https://github.com/swagger-api/swagger-petstore/blob/master/src/main/resources/openapi.yaml)",
    "termsOfService" : "http://swagger.io/terms/",
    "contact" : {
      "email" : "apiteam@swagger.io"
    },
    "license" : {
      "name" : "Apache 2.0",
      "url" : "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "version" : "1.0.11"
  },
  "externalDocs" : {
    "description" : "Find out more about Swagger",
    "url" : "http://swagger.io"
  },
  "servers" : [ {
    "url" : "https://italiatreni.swagger.io/api/v3"
  } ],
  "tags" : [ {
    "name" : "store",
    "description" : "Import data functions"
  }, {
    "name" : "analysis",
    "description" : "Access to Analysis features"
  } ],
  "paths" : {
    "/store" : {
      "post" : {
        "tags" : [ "store" ],
        "summary" : "Add a new range of mm on DB",
        "description" : "Add a new km to the DB",
        "operationId" : "addKm",
        "requestBody" : {
          "description" : "Store a new Km in the DB",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/Measure"
                }
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "400" : {
            "description" : "Invalid input"
          },
          "422" : {
            "description" : "Validation exception"
          }
        }
      }
    },
    "/store/getByRange/{page}/{pgSize}" : {
      "get" : {
        "tags" : [ "store" ],
        "summary" : "Finds data by range",
        "description" : "Get data by range",
        "operationId" : "getDataByRange",
        "parameters" : [ {
          "name" : "initialMm",
          "in" : "query",
          "description" : "Range will be used to filter data from db",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "number",
            "format" : "double",
            "default" : 0
          }
        }, {
          "name" : "endMm",
          "in" : "query",
          "description" : "Range will be used to filter data from db",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "number",
            "format" : "double",
            "default" : 1000
          }
        }, {
          "name" : "page",
          "in" : "path",
          "description" : "paginated results",
          "required" : true,
          "style" : "simple",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 1
          }
        }, {
          "name" : "pgSize",
          "in" : "path",
          "description" : "paginated results",
          "required" : true,
          "style" : "simple",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 1000
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Measure"
                  },
                  "x-content-type" : "application/json"
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid status value"
          }
        }
      }
    },
    "/analysis/{par}" : {
      "post" : {
        "tags" : [ "analysis" ],
        "summary" : "Start analysis",
        "description" : "",
        "operationId" : "Start analysis on data given a range and a set of thresholds",
        "parameters" : [ {
          "name" : "par",
          "in" : "path",
          "description" : "Parameter you want to analise",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 1
          }
        }, {
          "name" : "initialMm",
          "in" : "query",
          "description" : "Start point of range",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64",
            "default" : 1
          }
        }, {
          "name" : "endMm",
          "in" : "query",
          "description" : "End point of range",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64",
            "default" : 1000
          }
        }, {
          "name" : "lowThr",
          "in" : "query",
          "description" : "Low level threshold",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "number",
            "format" : "double",
            "default" : 5
          }
        }, {
          "name" : "mediumThr",
          "in" : "query",
          "description" : "Mid level threshold",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "number",
            "format" : "double",
            "default" : 6
          }
        }, {
          "name" : "highThr",
          "in" : "query",
          "description" : "High level threshold",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "number",
            "format" : "double",
            "default" : 7
          }
        } ],
        "responses" : {
          "202" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string",
                  "default" : "GUID",
                  "x-content-type" : "application/json"
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid input"
          }
        }
      }
    },
    "/analysis/{GUID}" : {
      "get" : {
        "tags" : [ "analysis" ],
        "summary" : "Get analysis state and eventually results",
        "description" : "",
        "operationId" : "getAnalysisResults",
        "parameters" : [ {
          "name" : "GUID",
          "in" : "path",
          "description" : "GUID of the analysis",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 1
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Defect"
                  },
                  "x-content-type" : "application/json"
                }
              }
            }
          },
          "202" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string",
                  "default" : "status",
                  "x-content-type" : "application/json"
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid input"
          }
        }
      }
    }
  },
  "components" : {
    "schemas" : {
      "Measure" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int64",
            "example" : 10
          },
          "mm" : {
            "type" : "integer",
            "format" : "int64",
            "example" : 198772
          },
          "p1" : {
            "type" : "number",
            "format" : "double",
            "example" : 7.131
          },
          "p2" : {
            "type" : "number",
            "format" : "double",
            "example" : 0
          },
          "p3" : {
            "type" : "number",
            "format" : "double",
            "example" : 0
          },
          "p4" : {
            "type" : "number",
            "format" : "double",
            "example" : 0
          }
        },
        "example" : {
          "mm" : 198772,
          "p1" : 7.131,
          "p2" : 0,
          "p3" : 0,
          "p4" : 0,
          "id" : 10
        },
        "xml" : {
          "name" : "measure"
        }
      },
      "Defect" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int64",
            "example" : 10
          },
          "mm" : {
            "type" : "integer",
            "format" : "int64",
            "example" : 198772
          },
          "delta" : {
            "type" : "number",
            "format" : "double",
            "example" : 1.3
          },
          "level" : {
            "type" : "string",
            "default" : "low"
          },
          "length" : {
            "type" : "integer",
            "format" : "int64",
            "example" : 0
          }
        },
        "example" : {
          "mm" : 198772,
          "level" : "low",
          "delta" : 1.3,
          "length" : 0,
          "id" : 10
        },
        "xml" : {
          "name" : "defect"
        }
      }
    },
    "requestBodies" : {
      "DefectArray" : {
        "description" : "List of Defect object",
        "content" : {
          "application/json" : {
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/Defect"
              }
            }
          }
        }
      },
      "MeasureArray" : {
        "description" : "List of Measure object",
        "content" : {
          "application/json" : {
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/Measure"
              }
            }
          }
        }
      }
    }
  }
}
